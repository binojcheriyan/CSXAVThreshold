{"version":3,"sources":["components/FetchThresholdInformation.js","reportWebVitals.js","index.js"],"names":["FetchThresholdInformation","state","loading","result","a","fetch","response","json","data","this","setState","className","scope","map","item","index","Name","AMS","APJ","EMEA","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAIqBA,E,4MAErBC,MAAM,CACFC,SAAQ,EACRC,OAAO,M,8FAGP,8BAAAC,EAAA,4DACc,sEADd,SAE0BC,MADZ,uEADd,cAEUC,EAFV,gBAGqBA,EAASC,OAH9B,OAGUC,EAHV,OAIIC,KAAKC,SAAS,CAACP,OAAQK,EAAMN,SAAS,IAJ1C,gD,0EAOA,WACI,OAAGO,KAAKR,MAAMC,QACH,qBAAKS,UAAU,MAAf,wBAGPF,KAAKR,MAAME,OAKP,sBAAKQ,UAAU,qBAAf,UACI,oBAAIA,UAAU,kBAAd,yCACA,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIA,UAAU,cAAcC,MAAM,MAAlC,kBACA,oBAAID,UAAU,cAAcC,MAAM,MAAlC,iBACA,oBAAID,UAAU,cAAcC,MAAM,MAAlC,iBACA,oBAAID,UAAU,cAAcC,MAAM,MAAlC,uBAGR,gCACCH,KAAKR,MAAME,OAAOU,KAAI,SAACC,EAAMC,GAC1B,OACI,+BACI,oBAAIJ,UAAU,+BAAd,SAA+CG,EAAKE,OACpD,oBAAIL,UAAU,cAAd,SAA8BG,EAAKG,MACnC,oBAAIN,UAAU,cAAd,SAA8BG,EAAKI,MACnC,oBAAIP,UAAU,cAAd,SAA8BG,EAAKK,SAJ9BJ,cAlBtB,qBAAKJ,UAAU,MAAf,uC,GApBoCS,IAAMC,WCQ9CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.15b5cf7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport  'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nexport default class FetchThresholdInformation extends React.Component{\r\n    \r\nstate={\r\n    loading:true,\r\n    result:null,\r\n}\r\n\r\n    async componentDidMount(){\r\n        const url=\"https://guaemeaham1.mx.hpicorp.net/CSXAPI/api/CSXAvailableThreshold\";\r\n        const response= await fetch(url);\r\n        const data=await response.json();\r\n        this.setState({result: data, loading: false})\r\n    }\r\n    \r\n    render(){\r\n        if(this.state.loading){\r\n            return <div className=\"App\">loading...</div>;\r\n        }\r\n\r\n        if(!this.state.result){\r\n            return <div className=\"App\">didn't get a response</div>;\r\n        }\r\n\r\n        return (\r\n                <div className=\"container bg-light\">\r\n                    <h2 className=\"text-center p-5\">SPECIFICAV THRESHOLD IN CSX</h2>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\" scope=\"col\">Name</th>\r\n                                <th className=\"text-center\" scope=\"col\">AMS</th>\r\n                                <th className=\"text-center\" scope=\"col\">APJ</th>\r\n                                <th className=\"text-center\" scope=\"col\">EMEA</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.result.map((item, index)=>{\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <td className=\"text-center font-weight-bold\" >{item.Name}</td>\r\n                                    <td className=\"text-center\" >{item.AMS}</td>\r\n                                    <td className=\"text-center\" >{item.APJ}</td>\r\n                                    <td className=\"text-center\" >{item.EMEA}</td>\r\n                                </tr>\r\n                            )   \r\n                        })}\r\n                        </tbody>\r\n                        </table>\r\n                </div>)\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './components/FetchThresholdInformation';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}